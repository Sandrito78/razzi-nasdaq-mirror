name: Nasdaq Mirror

on:
  workflow_dispatch:        # avvio manuale
  schedule:
    - cron: "0 */6 * * *"   # ogni 6 ore (aggiusta se vuoi)

permissions:
  contents: write           # serve per poter fare push

jobs:
  fetch:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      # === DEBUG: assicuriamoci che stia girando questo file ===
      - name: Debug ‚Äì mostra workflow caricato
        run: sed -n '1,220p' .github/workflows/nasdaq.yml

      # === DOWNLOAD LISTE: mirror RAW GitHub -> fallback www.nasdaqtrader.com con Referer ===
      - name: Download lists (mirror-first con fallback e retry)
        shell: bash
        run: |
          set -u -o pipefail
          mkdir -p data

          fetch() {
            local out="$1"; shift
            for u in "$@"; do
              echo "‚û°Ô∏è  Provo $u"
              UA=(-H 'User-Agent: Mozilla/5.0' -H 'Accept: text/plain')
              TIME=(--connect-timeout 10 --max-time 60 --retry 3 --retry-all-errors)
              EXTRA=()
              # www.nasdaqtrader.com richiede un Referer valido
              if [[ "$u" == *"www.nasdaqtrader.com"* ]]; then
                EXTRA=(-e 'https://www.nasdaqtrader.com/Trader.aspx?id=SymbolDirectory')
              fi
              if curl -fsSL "${TIME[@]}" "${UA[@]}" "${EXTRA[@]}" "$u" -o "$out.tmp"; then
                if grep -qE '(^Symbol\|Security Name)|\|' "$out.tmp"; then
                  mv "$out.tmp" "$out"
                  echo "‚úÖ OK da $u"
                  return 0
                else
                  echo "‚ö†Ô∏è  Contenuto non pipe-delimited da $u (probabile HTML)"
                fi
              else
                echo "‚ùå curl fallita per $u"
              fi
            done
            rm -f "$out.tmp" 2>/dev/null || true
            echo "‚ö†Ô∏è  Tutte le sorgenti fallite per $out (se esiste, lascio il file com'era)"
            # non falliamo il job: pu√≤ non esserci un update oggi
            return 0
          }

          # nasdaqlisted (NO ftp)
          fetch data/nasdaqlisted.txt \
            "https://raw.githubusercontent.com/Sandrito78/razzi-nasdaq-mirror/main/data/nasdaqlisted.txt" \
            "https://www.nasdaqtrader.com/files/SymbolDirectory/nasdaqlisted.txt"

          # otherlisted (NO ftp)
          fetch data/otherlisted.txt \
            "https://raw.githubusercontent.com/Sandrito78/razzi-nasdaq-mirror/main/data/otherlisted.txt" \
            "https://www.nasdaqtrader.com/files/SymbolDirectory/otherlisted.txt"

          echo "üì¶ Dimensioni finali:"
          ls -lh data/*.txt || true

      # === COMMIT & PUSH con rebase sicuro ===
      - name: Commit & Push (safe rebase)
        shell: bash
        run: |
          set -euo pipefail

          git config user.name  "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config pull.rebase true

          git add -A
          if git diff --cached --quiet; then
            echo "Nessuna modifica da committare."
            exit 0
          fi

          git commit -m "Mirror update"

          git fetch origin main
          git rebase origin/main

          n=0
          until [ $n -ge 3 ]; do
            if git push origin HEAD:main; then
              echo "Push riuscito."
              exit 0
            fi
            n=$((n+1))
            echo "Push fallito (tentativo $n). Pull --rebase e ritento‚Ä¶"
            git pull --rebase origin main || true
            sleep 2
          done

          echo "Push fallito dopo 3 tentativi."
          exit 1
